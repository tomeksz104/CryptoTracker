{"version":3,"file":"static/js/480.a5a74d72.chunk.js","mappings":"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","sources":["features/CryptocurrencyDetail/CryptocurrencyItem.js","features/CryptocurrencyDetail/Converter.js","features/CryptocurrencyDetail/Chart.js","features/CryptocurrencyDetail/Markets.js","features/CryptocurrencyDetail/Tabs.js","pages/CryptocurrencyDetail.js"],"sourcesContent":["import { useContext, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport empty from \"../../assets/svg/crypto-empty.svg\";\r\nimport { ReactComponent as CaretDown } from \"../../assets/svg/caret-down.svg\";\r\nimport { ReactComponent as CaretUp } from \"../../assets/svg/caret-up.svg\";\r\nimport { WatchlistContext } from \"../../context/watchlist-context\";\r\n\r\nconst stringToNumber = (number) => {\r\n  return parseFloat(number.replace(/,/g, \"\"));\r\n};\r\n\r\nconst CryptocurrencyItem = (props) => {\r\n  const watchlistCtx = useContext(WatchlistContext);\r\n  const imgRef = useRef(null);\r\n  let { supply, maxSupply } = props.cryptocurrency;\r\n\r\n  supply = stringToNumber(supply);\r\n  maxSupply = stringToNumber(maxSupply);\r\n\r\n  const isOnWatchlist = watchlistCtx.watchlist.includes(\r\n    props.cryptocurrency.symbol\r\n  );\r\n\r\n  let circulatingSupplyPercentage;\r\n  if (isFinite(supply / maxSupply)) {\r\n    circulatingSupplyPercentage = ((supply / maxSupply) * 100).toFixed(2) + \"%\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSvg = async () => {\r\n      try {\r\n        const importedIcon = await import(\r\n          `../../../node_modules/cryptocurrency-icons/svg/color/${props.cryptocurrency.symbol.toLowerCase()}.svg`\r\n        );\r\n        imgRef.current.src = importedIcon.default;\r\n      } catch (error) {\r\n        imgRef.current.src = empty;\r\n      }\r\n    };\r\n    fetchSvg();\r\n  }, [props.cryptocurrency.symbol]);\r\n\r\n  const handleToggleWatchlist = () => {\r\n    if (watchlistCtx.watchlist.includes(props.cryptocurrency.symbol)) {\r\n      watchlistCtx.removeFromWatchlist(props.cryptocurrency.symbol);\r\n    } else {\r\n      watchlistCtx.addToWatchlist(props.cryptocurrency.symbol);\r\n    }\r\n  };\r\n\r\n  const changePercent24hButton = isNaN(\r\n    props.cryptocurrency.changePercent24Hr\r\n  ) ? (\r\n    \"-\"\r\n  ) : props.cryptocurrency.changePercent24Hr > 0 ? (\r\n    <span className=\"text-white bg-green-500 font-medium rounded-md text-xs px-3 py-1.5 text-center inline-flex items-center ml-3\">\r\n      <CaretUp className=\"fill-white w-3 h-3\" />\r\n      {props.cryptocurrency.changePercent24Hr}%\r\n    </span>\r\n  ) : (\r\n    <span className=\"text-white bg-red-500 font-medium rounded-md text-xs px-3 py-1.5 text-center inline-flex items-center ml-3\">\r\n      <CaretDown className=\"fill-white w-3 h-3\" />\r\n      {props.cryptocurrency.changePercent24Hr}%\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-between mt-8\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <img\r\n            ref={imgRef}\r\n            src={empty}\r\n            alt={`Logo ${props.cryptocurrency.name}`}\r\n            width={32}\r\n            height={32}\r\n          />\r\n          <h2 className=\"text-4xl font-semibold leading-none sm:text-4xl xl:max-w-3xl text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.name}\r\n          </h2>\r\n          <span\r\n            className=\"flex items-center text-xs font-medium bg-slate-400/10 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n            style={{ padding: \"5px 8px\" }}\r\n          >\r\n            {props.cryptocurrency.symbol}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleToggleWatchlist}\r\n          className=\"flex items-center px-3 py-2 space-x-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className={`w-4 h-4 outline-0 ${\r\n              isOnWatchlist ? \"text-amber-500\" : \"\"\r\n            }`}\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\"\r\n            ></path>\r\n          </svg>\r\n          <span className=\"hidden md:block text-xs font-medium\">\r\n            {isOnWatchlist ? \"Remove from Watchlist\" : \"Add to Watchlist\"}\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className=\"flex items-center mt-3\">\r\n        <span\r\n          className=\"bg-slate-400/30 font-medium rounded-md text-xs dark:text-white\"\r\n          style={{ padding: \"5px 8px\" }}\r\n        >\r\n          Rank #{props.cryptocurrency.rank}\r\n        </span>\r\n        <Link\r\n          to={props.cryptocurrency.explorer}\r\n          target=\"_blank\"\r\n          className=\"bg-slate-400/10 hover:bg-slate-400/20 font-medium rounded-md text-xs text-center inline-flex items-center ml-3 dark:text-white\"\r\n          style={{ padding: \"5px 8px\" }}\r\n        >\r\n          Explorer\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-4 h-4 ml-1\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\r\n            />\r\n          </svg>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"mt-5 grid gap-6 lg:w-full lg:grid-cols-4 lg:border-t border-slate-100 dark:border-slate-800 py-5\">\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            {props.cryptocurrency.name} Price ({props.cryptocurrency.symbol})\r\n          </h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.price}\r\n            {changePercent24hButton}\r\n          </span>\r\n        </div>\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            Market Cap\r\n          </h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.marketCap}\r\n          </span>\r\n        </div>\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">Volume</h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.volume24Hr}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            Circulating Supply\r\n          </h3>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"font-semibold text-slate-700 dark:text-white\">\r\n              {props.cryptocurrency.supply}\r\n            </span>\r\n            <span className=\"text-slate-500 dark:text-slate-400\">\r\n              {circulatingSupplyPercentage}\r\n            </span>\r\n          </div>\r\n          {circulatingSupplyPercentage && (\r\n            <>\r\n              <div className=\"w-full h-2 bg-slate-400/10 rounded-full mt-3\">\r\n                <div\r\n                  className=\"h-full text-center text-xs text-white bg-slate-400/30 rounded-full\"\r\n                  style={{ width: circulatingSupplyPercentage }}\r\n                ></div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between text-sm mt-3\">\r\n                <span className=\"text-slate-500 dark:text-slate-400\">\r\n                  Max supply:\r\n                </span>\r\n                <span className=\"font-semibold text-slate-700 dark:text-white\">\r\n                  {!isNaN(parseFloat(props.cryptocurrency.maxSupply))\r\n                    ? props.cryptocurrency.maxSupply\r\n                    : \"-\"}\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptocurrencyItem;\r\n","import { useContext, useState } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nfunction roundToDecimals(number, decimals) {\r\n  const log10 = number ? Math.floor(Math.log10(number)) : 0,\r\n    div =\r\n      log10 < 0 ? Math.pow(10, decimals - log10 - 1) : Math.pow(10, decimals);\r\n\r\n  return Math.round(number * div) / div;\r\n}\r\n\r\nconst Converter = ({ cryptocurrency, timestampOfLastUpdate }) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const [fromAmount, setFromAmount] = useState(1);\r\n  const [toAmount, setToAmount] = useState(\r\n    roundToDecimals(cryptocurrency.priceWithoutSymbol, 2)\r\n  );\r\n  const lastUpdatePriceDate = new Date(timestampOfLastUpdate).toLocaleString(\r\n    \"en-US\",\r\n    {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      timeZone: \"UTC\",\r\n    }\r\n  );\r\n\r\n  const handleChangeFromAmount = (event) => {\r\n    setFromAmount(event.target.value);\r\n\r\n    const result =\r\n      event.target.value.replace(\",\", \".\") * cryptocurrency.priceWithoutSymbol;\r\n\r\n    setToAmount(roundToDecimals(result, 2));\r\n  };\r\n\r\n  const handleChangeToAmount = (event) => {\r\n    setToAmount(event.target.value);\r\n\r\n    const result =\r\n      event.target.value.replace(\",\", \".\") / cryptocurrency.priceWithoutSymbol;\r\n\r\n    setFromAmount(roundToDecimals(result, 2));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-slate-400/10 text-slate-700 dark:text-white w-full max-w-md flex flex-col rounded-xl px-4 py-5 space-y-5\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"rounded-full w-4 h-4 border border-amber-500\"></div>\r\n        <div className=\"text-md font-bold\">\r\n          {cryptocurrency.symbol} to {currencyCtx.currentCurrency} converter\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <input\r\n          onChange={handleChangeFromAmount}\r\n          type=\"number\"\r\n          value={fromAmount}\r\n          placeholder=\"0\"\r\n          className=\"w-full pl-3 py-2 pe-14 rounded-md border border-slate-200 shadow-sm focus:outline-none focus:border-sky-500 dark:border-slate-200/10 dark:bg-slate-400/10 dark:text-white sm:text-sm\"\r\n        />\r\n\r\n        <span className=\"absolute inset-y-0 end-3 grid w-10 place-content-center text-slate-500 dark:text-slate-400 select-none\">\r\n          {cryptocurrency.symbol}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"w-full\">\r\n        <svg\r\n          className=\"mx-auto\"\r\n          width=\"24px\"\r\n          height=\"24px\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M7 23.75a.75.75 0 0 1-.75-.75V1a.75.75 0 0 1 1.5 0v22a.75.75 0 0 1-.75.75Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M2.47 5.53a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06L7 2.06 3.53 5.53a.75.75 0 0 1-1.06 0ZM17 23.75a.75.75 0 0 1-.75-.75V1a.75.75 0 0 1 1.5 0v22a.75.75 0 0 1-.75.75Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M12.47 18.47a.75.75 0 0 1 1.06 0L17 21.94l3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <input\r\n          onChange={handleChangeToAmount}\r\n          type=\"number\"\r\n          value={toAmount}\r\n          placeholder=\"0\"\r\n          className=\"w-full pl-3 py-2 pe-14 rounded-md border border-slate-200 shadow-sm focus:outline-none focus:border-sky-500 dark:border-slate-200/10 dark:bg-slate-400/10 dark:text-white sm:text-sm\"\r\n        />\r\n\r\n        <span className=\"absolute inset-y-0 end-3 grid w-10 place-content-center text-slate-500 dark:text-slate-400 select-none\">\r\n          {currencyCtx.currentCurrency}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end mt-4 text-slate-500 text-xs space-x-2\">\r\n        <span>Last update: </span>\r\n        <span className=\"font-semibold\">{lastUpdatePriceDate}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import { useContext, useRef } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HighchartsExporting from \"highcharts/modules/exporting\";\r\n\r\nimport Converter from \"./Converter\";\r\nimport DarkmodeContext from \"../../context/darkmode-context\";\r\nimport { getNonZeroDecimalPlace } from \"../../utils/cryptoUtils\";\r\nimport \"./Chart.css\";\r\n\r\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\r\n\r\nif (typeof Highcharts === \"object\") {\r\n  HighchartsExporting(Highcharts);\r\n}\r\n\r\nconst timestampNow = Math.floor(Date.now());\r\n\r\nexport const CHART_INTERVALS = [\r\n  {\r\n    title: \"1D\",\r\n    value: \"m5\",\r\n    start: timestampNow - 5 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"7D\",\r\n    value: \"m15\",\r\n    start: timestampNow - 7 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"1M\",\r\n    value: \"h6\",\r\n    start: timestampNow - 182 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"1Y\",\r\n    value: \"h12\",\r\n    start: timestampNow - 364 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"ALL\",\r\n    value: \"d1\",\r\n    start: timestampNow - 3000 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n];\r\n\r\nconst Chart = ({\r\n  cryptocurrency,\r\n  historicalData,\r\n  chartInterval,\r\n  onChangeChartInterval,\r\n  timestampOfLastUpdate,\r\n}) => {\r\n  const darkmodeCtx = useContext(DarkmodeContext);\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const chartRef = useRef(null);\r\n  const currentPrice = Number(cryptocurrency.priceWithoutSymbol);\r\n\r\n  const borderColor = darkmodeCtx.isDarkmode\r\n    ? \"rgb(51, 65, 85)\"\r\n    : \"rgb(226, 232, 240)\";\r\n\r\n  const textColor = darkmodeCtx.isDarkmode\r\n    ? \"rgb(148 163 184)\"\r\n    : \"rgb(100 116 139)\";\r\n\r\n  const options = {\r\n    rangeSelector: {\r\n      selected: 1,\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      opposite: true,\r\n      gridZIndex: -1,\r\n      gridLineColor: darkmodeCtx.isDarkmode\r\n        ? \"rgb(30 41 59 / 0.5)\"\r\n        : \"rgb(241 245 249)\",\r\n      title: {\r\n        text: false,\r\n      },\r\n      labels: {\r\n        align: \"left\",\r\n        style: {\r\n          color: textColor,\r\n        },\r\n      },\r\n      showLastLabel: false,\r\n      tickPositioner: function (min, max) {\r\n        if (max < 1) {\r\n          return null;\r\n        } else {\r\n          let ticks = [];\r\n          let tick = min;\r\n          let step = Math.round((max - min) / 7);\r\n\r\n          if (step === 0) {\r\n            return null;\r\n          }\r\n\r\n          while (tick < max - step / 2) {\r\n            ticks.push(Math.round(tick));\r\n            tick += step;\r\n          }\r\n\r\n          ticks.push(Math.round(max));\r\n          ticks.push(Math.round(max + step));\r\n\r\n          return ticks;\r\n        }\r\n      },\r\n    },\r\n    xAxis: {\r\n      type: \"datetime\",\r\n      gridLineWidth: 0,\r\n      tickColor: borderColor,\r\n      tickLength: 5,\r\n      lineColor: borderColor,\r\n      labels: {\r\n        style: {\r\n          color: textColor,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      zIndex: 2,\r\n      split: false,\r\n      shared: true,\r\n      followPointer: true,\r\n      backgroundColor: darkmodeCtx.isDarkmode ? \"rgb(30 41 59)\" : \"#FFF\",\r\n      borderColor: \"#AAAAAA\",\r\n      borderRadius: 5,\r\n      useHTML: true,\r\n      shadow: false,\r\n      padding: 0,\r\n      formatter: function () {\r\n        const price = this.y;\r\n\r\n        const formattedDate = Highcharts.dateFormat(\"%d/%m/%Y\", this.x);\r\n        const formattedTime = Highcharts.dateFormat(\"%H:%M:%S\", this.x);\r\n        const formattedPrice = new Intl.NumberFormat(\"en-EN\", {\r\n          style: \"currency\",\r\n          currency: currencyCtx.currentCurrency,\r\n          minimumFractionDigits: getNonZeroDecimalPlace(price) + 1,\r\n        }).format(price);\r\n\r\n        return `\r\n          <div class=\"w-48 flex flex-col px-3 py-2 space-y-2 text-xs rounded-md p-3 leading-4 shadow-[rgba(88,102,126,0.08)_0px_1px_1px,rgba(88,102,126,0.1)_0px_8px_16px]\">\r\n            <div class=\"flex justify-between items-center text-slate-500\">\r\n              <span class=\"text-slate-700 dark:text-white font-medium\">${formattedDate}</span>\r\n              <span class=\"text-slate-500 dark:text-slate-400\">${formattedTime}</span>\r\n            </div>\r\n            <div>\r\n              <span style=\"${\r\n                this.y < currentPrice\r\n                  ? \"background-color: rgb(239 68 68)\"\r\n                  : \"background-color: rgb(34 197 94)\"\r\n              }\" class=\"inline-block w-3.5 h-3.5 content-[''] shadow-[rgba(88,102,126,0.08)_0px_1px_1px,rgba(88,102,126,0.1)_0px_8px_16px] translate-y-0.5 mr-2 rounded-full border-2 border-solid border-white\"></span>\r\n              <span class=\"text-slate-500 dark:text-slate-400\">Price: </span>\r\n              <span class=\"text-slate-700 dark:text-white font-medium\">${formattedPrice}</span>\r\n            </div>\r\n          </div>\r\n            `;\r\n      },\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        animation: false,\r\n      },\r\n    },\r\n    chart: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n      plotBorderColor: borderColor,\r\n      plotBorderWidth: 1,\r\n      events: {\r\n        render() {\r\n          const chart = this,\r\n            renderer = this.renderer,\r\n            pathStr = \"M 0 12 L 0 0 L 64 0 L 64 24 L 0 24 Z\",\r\n            path = pathStr.split(\" \"),\r\n            points = this.series[0].points,\r\n            lastPoint = points[points.length - 1];\r\n\r\n          if (chart.labelBg) {\r\n            chart.labelBg.destroy();\r\n          }\r\n          if (chart.labelTxt) {\r\n            chart.labelTxt.destroy();\r\n          }\r\n\r\n          chart.labelBg = renderer\r\n            .path(path)\r\n            .attr({\r\n              fill:\r\n                lastPoint.y > currentPrice\r\n                  ? \"rgb(34 197 94)\"\r\n                  : \"rgb(239 68 68)\",\r\n            })\r\n            .add();\r\n\r\n          chart.labelTxt = renderer\r\n            .text(Highcharts.numberFormat(lastPoint.y, 0))\r\n            .css({\r\n              fontSize: \"0.75rem\",\r\n              color: \"#fff\",\r\n            })\r\n            .add();\r\n\r\n          chart.labelBg\r\n            .translate(\r\n              chart.plotWidth + 10,\r\n              lastPoint.plotY + chart.plotTop - 12\r\n            )\r\n            .toFront();\r\n\r\n          chart.labelTxt\r\n            .attr({\r\n              x: chart.plotWidth + 25,\r\n              y: lastPoint.plotY + chart.plotTop + 5,\r\n            })\r\n            .toFront();\r\n        },\r\n      },\r\n      style: {\r\n        fontFamily: `\"Inter\", sans-serif`,\r\n      },\r\n    },\r\n    scrollbar: {\r\n      enabled: true,\r\n      height: 0,\r\n    },\r\n    navigator: {\r\n      outlineWidth: 0,\r\n      maskFill: \"rgba(56, 98, 251, 0.08)\",\r\n      handles: {\r\n        backgroundColor: \"#eee\",\r\n        borderColor: \"#777\",\r\n        symbols: [\"circle\", \"circle\"],\r\n      },\r\n      series: {\r\n        type: \"areaspline\",\r\n        color: \"#555\",\r\n        fillColor: \"#ddd\",\r\n      },\r\n      xAxis: {\r\n        gridLineColor: \"rgb(148 163 184 / 0.2)\",\r\n        gridLineWidth: 1,\r\n        labels: {\r\n          y: 12,\r\n          style: {\r\n            color: textColor,\r\n            textOutline: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        type: \"area\",\r\n        name: currencyCtx.currentCurrency,\r\n        data: historicalData?.length ? historicalData : [],\r\n        color: \"#000\",\r\n        threshold: currentPrice,\r\n        zones: [\r\n          {\r\n            value: currentPrice,\r\n            color: \"#ff6968\",\r\n            fillColor: {\r\n              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n              stops: [\r\n                [0, \"rgba(255, 105, 104, 0)\"],\r\n                [1, \"rgba(255, 105, 104, 0.2)\"],\r\n              ],\r\n            },\r\n            threshold: Infinity,\r\n          },\r\n          {\r\n            color: \"#94caae\",\r\n            fillColor: {\r\n              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 0.5 },\r\n              stops: [\r\n                [0, \"rgba(34, 197, 94, 0.2)\"],\r\n                [1, \"rgba(34, 197, 94, 0)\"],\r\n              ],\r\n            },\r\n          },\r\n        ],\r\n        lastVisiblePrice: {\r\n          enabled: true,\r\n          color: \"red\",\r\n          label: {\r\n            enabled: true,\r\n            backgroundColor: \"red\",\r\n          },\r\n        },\r\n        lastPrice: {\r\n          enabled: true,\r\n          label: {\r\n            enabled: true,\r\n            format: \"{value:.1f}\",\r\n            padding: 5,\r\n            backgroundColor: \"grey\",\r\n            style: {\r\n              color: \"#ffff00\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        type: \"line\",\r\n        data: historicalData?.length\r\n          ? [\r\n              [historicalData[0][0], currentPrice],\r\n              [historicalData[historicalData.length - 1][0], currentPrice],\r\n            ]\r\n          : [],\r\n        color: borderColor,\r\n        dashStyle: \"dash\",\r\n        lineWidth: 1,\r\n        enableMouseTracking: false,\r\n      },\r\n    ],\r\n\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    exporting: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const chart = chartRef.current?.chart;\r\n    if (chart) {\r\n      chart.fullscreen.toggle();\r\n    }\r\n  };\r\n\r\n  const handleDownloadCSV = () => {\r\n    const chart = chartRef.current?.chart;\r\n    if (chart) {\r\n      chart.exportChart();\r\n    }\r\n  };\r\n\r\n  const onChangeInterval = (interval) => {\r\n    onChangeChartInterval(interval);\r\n  };\r\n\r\n  const listChartIntervals = CHART_INTERVALS.map((interval, index) => (\r\n    <li key={index}>\r\n      <button\r\n        onClick={() => onChangeInterval(interval)}\r\n        className={`flex justify-center hover:bg-white hover:dark:bg-slate-900 rounded-lg px-3 py-1 ${\r\n          chartInterval.title === interval.title\r\n            ? \"bg-white dark:bg-slate-900 text-sky-500\"\r\n            : \"hover:bg-white hover:dark:bg-slate-900\"\r\n        }`}\r\n      >\r\n        {interval.title}\r\n      </button>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"mt-5 grid grid-cols-1 gap-y-6 lg:gap-x-6 lg:w-full lg:grid-cols-4\">\r\n      <div className=\"col-span-3\">\r\n        <div className=\"flex justify-between\">\r\n          <div>\r\n            <ul className=\"grid grid-flow-col text-center text-neutral-800 dark:text-neutral-300 bg-slate-400/10 rounded-lg p-1 space-x-1 text-xs font-medium\">\r\n              {listChartIntervals}\r\n            </ul>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={toggleFullScreen}\r\n              className=\"flex items-center px-3 py-2 space-x-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n            >\r\n              <svg\r\n                viewBox=\"0 0 14 14\"\r\n                className=\"w-3 h-3 text-neutral-500 dark:text-neutral-300\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 4.62V1.666h2.917m6.166 0H13v2.952m0 4.762v2.952h-2.917m-6.166 0H1V9.381\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span className=\"text-xs font-medium\">Fullscreen</span>\r\n            </button>\r\n            <button\r\n              onClick={handleDownloadCSV}\r\n              className=\"flex items-center px-3 py-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md\"\r\n            >\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-4 text-neutral-500 dark:text-neutral-300\"\r\n                fill=\"none\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M20 15C19.45 15 19 15.45 19 16V19H5V16C5 15.45 4.55 15 4 15C3.45 15 3 15.45 3 16V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V16C21 15.45 20.55 15 20 15Z\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M10.5499 15.44C10.9499 15.84 11.47 16.04 12 16.04C12.53 16.04 13.05 15.84 13.45 15.44L17.7099 11.18C18.0999 10.79 18.0999 10.16 17.7099 9.77C17.3199 9.38 16.6899 9.38 16.2999 9.77L13.01 13.01V4C13.01 3.45 12.56 3 12.01 3C11.46 3 11.01 3.45 11.01 4V13.06L7.71996 9.77C7.32996 9.38 6.69996 9.38 6.30996 9.77C5.91996 10.16 5.91996 10.79 6.30996 11.18L10.57 15.44H10.5499Z\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {historicalData?.length !== 0 && (\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            constructorType={\"stockChart\"}\r\n            options={options}\r\n            ref={chartRef}\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        <Converter\r\n          cryptocurrency={cryptocurrency}\r\n          timestampOfLastUpdate={timestampOfLastUpdate}\r\n          key={cryptocurrency.priceWithoutSymbol}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { useState, useContext } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport { formatPrice } from \"../../utils/cryptoUtils\";\r\nimport { sortData } from \"../../utils/sort\";\r\n\r\nimport { ReactComponent as CaretDown } from \"../../assets/svg/caret-down.svg\";\r\nimport { ReactComponent as CaretUp } from \"../../assets/svg/caret-up.svg\";\r\n\r\nconst Markets = (props) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n\r\n  const [sortField, setSortField] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  const [marketsData, setMarketsData] = useState(props.marketsData);\r\n\r\n  const handleLoadMore = () => {\r\n    props.onHandleLoadMore();\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    let updatedSortOrder;\r\n    if (field === sortField) {\r\n      updatedSortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      updatedSortOrder = \"desc\";\r\n    }\r\n\r\n    const sortedCurrencies = sortData(\r\n      [...marketsData],\r\n      field,\r\n      updatedSortOrder\r\n    );\r\n\r\n    setSortField(field);\r\n    setSortOrder(updatedSortOrder);\r\n    setMarketsData(sortedCurrencies);\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField === field) {\r\n      return sortOrder === \"asc\" ? (\r\n        <CaretUp className=\"w-3 h-3 mr-1 1 fill-black dark:fill-slate-200\" />\r\n      ) : (\r\n        <CaretDown className=\"w-3 h-3 mr-1 1 fill-black dark:fill-slate-200\" />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const marketsList = marketsData.map((market, i) => {\r\n    const price = formatPrice(\r\n      market.priceUsd,\r\n      currencyCtx.currentCurrency,\r\n      currencyCtx.currentCurrencyRate\r\n    );\r\n\r\n    const volume24h = formatPrice(\r\n      market.volumeUsd24Hr,\r\n      currencyCtx.currentCurrency,\r\n      currencyCtx.currentCurrencyRate\r\n    );\r\n\r\n    return (\r\n      <tr key={market.marketId}>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 text-slate-600 dark:text-slate-300\">\r\n          {market.marketId}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {market.exchangeId}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {market.baseSymbol}/{market.quoteSymbol}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {price}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {volume24h}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {parseFloat(market.volumePercent).toFixed(2)}%\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"border-t border-slate-200 dark:border-slate-700 table-auto w-full text-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                onClick={() => handleSort(\"marketId\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {\" \"}\r\n                  {getSortIcon(\"marketId\")} #\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"exchangeId\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"exchangeId\")}Exchange\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"baseSymbol\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"baseSymbol\")}Pair\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"priceUsd\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"priceUsd\")}Price\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"volumeUsd24Hr\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"volumeUsd24Hr\")}Volume 24h\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"volumePercent\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"volumePercent\")}Volume %\r\n                </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{marketsList}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {props.marketsData.length !== 0 && (\r\n        <div className=\"mt-5 flex justify-center\">\r\n          <button\r\n            onClick={handleLoadMore}\r\n            className=\"flex text-neutral-800 dark:text-neutral-300 font-medium bg-slate-400/20 hover:bg-slate-400/30 rounded-md py-2 px-16 cursor-pointer transition-colors duration-300\"\r\n          >\r\n            Load More\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Markets;\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport PageContent from \"../../components/Layout/PageContent\";\r\nimport Markets from \"./Markets\";\r\nimport { CHART_INTERVALS } from \"./Chart\";\r\nimport {\r\n  useGetChartDataQuery,\r\n  useGetMarketsQuery,\r\n} from \"../../store/services/cryptoApi\";\r\n\r\nconst Tabs = (props) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const [activeTab, setActiveTab] = useState(\"Overview\");\r\n  const [chartInterval, setChartInterval] = useState(CHART_INTERVALS[4]);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const { data: marketsData = [] } = useGetMarketsQuery({\r\n    id: props.cryptocurrency.id,\r\n    offset,\r\n  });\r\n\r\n  const { data: chartData = [] } = useGetChartDataQuery({\r\n    id: props.cryptocurrency.id,\r\n    chartInterval: chartInterval.value,\r\n    start: chartInterval.start,\r\n    end: chartInterval.end,\r\n    currentCurrencyRate: currencyCtx.currentCurrencyRate,\r\n  });\r\n\r\n  const handleChangeTab = (tab) => () => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const handleLoadMoreMarketsData = () => {\r\n    setOffset((prevOffset) => prevOffset + 100);\r\n  };\r\n\r\n  const handleChangeChartInterval = (interval) => {\r\n    setChartInterval(interval);\r\n  };\r\n\r\n  const activeTabClasses =\r\n    \"inline-block px-4 py-3 rounded-lg text-white dark:text-slate-900 bg-sky-500 cursor-pointer\";\r\n  const tabClasses =\r\n    \"inline-block px-4 py-3 rounded-lg hover:text-slate-900 hover:bg-slate-400/20 dark:hover:text-white cursor-pointer\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"border-y border-slate-200 dark:border-slate-700\">\r\n        <PageContent classes=\"my-3\">\r\n          <ul className=\"flex flex-wrap text-sm font-medium text-center text-slate-500 dark:text-slate-400\">\r\n            <li className=\"mr-2\">\r\n              <span\r\n                onClick={handleChangeTab(\"Overview\")}\r\n                className={\r\n                  activeTab === \"Overview\" ? activeTabClasses : tabClasses\r\n                }\r\n                aria-current=\"page\"\r\n              >\r\n                Overview\r\n              </span>\r\n            </li>\r\n            <li className=\"mr-2\">\r\n              <span\r\n                onClick={handleChangeTab(\"Markets\")}\r\n                className={\r\n                  activeTab === \"Markets\" ? activeTabClasses : tabClasses\r\n                }\r\n              >\r\n                Markets\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </PageContent>\r\n      </div>\r\n      <PageContent>\r\n        {activeTab === \"Overview\" && (\r\n          <Chart\r\n            cryptocurrency={props.cryptocurrency}\r\n            historicalData={chartData}\r\n            chartInterval={chartInterval}\r\n            onChangeChartInterval={handleChangeChartInterval}\r\n            timestampOfLastUpdate={props.timestampOfLastUpdate}\r\n          />\r\n        )}\r\n        {activeTab === \"Markets\" && (\r\n          <Markets\r\n            key={marketsData.length}\r\n            marketsData={marketsData}\r\n            name={props.cryptocurrency.name}\r\n            onHandleLoadMore={handleLoadMoreMarketsData}\r\n          />\r\n        )}\r\n      </PageContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n","import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport PageContent from \"../components/Layout/PageContent\";\r\nimport CryptocurrencyItem from \"../features/CryptocurrencyDetail/CryptocurrencyItem\";\r\n\r\nimport Tabs from \"../features/CryptocurrencyDetail/Tabs\";\r\n\r\nimport { useContext } from \"react\";\r\nimport CurrencyContext from \"../context/currecy-context\";\r\nimport { formatCryptocurrency } from \"../utils/cryptoUtils\";\r\nimport { useGetCryptocurrencyQuery } from \"../store/services/cryptoApi\";\r\n\r\n// const Tabs = lazy(() => import(\"../features/CryptocurrencyDetail/Tabs\"));\r\n\r\nconst CryptocurrencyDetailPage = () => {\r\n  const navigate = useNavigate();\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  let { currencyId } = useParams();\r\n  const { data: cryptocurrencyData, error } =\r\n    useGetCryptocurrencyQuery(currencyId);\r\n\r\n  if (error) navigate(\"/404\");\r\n  if (!cryptocurrencyData) return;\r\n\r\n  const updatedCryptocurrency = formatCryptocurrency(\r\n    cryptocurrencyData.data,\r\n    currencyCtx.currentCurrency,\r\n    currencyCtx.currentCurrencyRate\r\n  );\r\n\r\n  const timestampOfLastUpdate = cryptocurrencyData.timestamp;\r\n\r\n  return (\r\n    <>\r\n      <PageContent classes=\"mt-8\">\r\n        <nav to={\"/\"} className=\"flex\" aria-label=\"Breadcrumb\">\r\n          <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\r\n            <li className=\"inline-flex items-center\">\r\n              <Link\r\n                to={\"/\"}\r\n                href=\"#\"\r\n                className=\"inline-flex items-center text-sm font-medium text-slate-700 hover:text-sky-600 dark:text-slate-400 dark:hover:text-white\"\r\n              >\r\n                Cryptocurrencies\r\n              </Link>\r\n            </li>\r\n            <li aria-current=\"page\">\r\n              <div className=\"flex items-center\">\r\n                <svg\r\n                  aria-hidden=\"true\"\r\n                  className=\"w-5 h-5 text-slate-400\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n                <span className=\"ml-1 text-sm font-medium text-slate-500 md:ml-2 dark:text-slate-400\">\r\n                  {cryptocurrencyData.data.name}\r\n                </span>\r\n              </div>\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <CryptocurrencyItem cryptocurrency={updatedCryptocurrency} />\r\n      </PageContent>\r\n\r\n      <Tabs\r\n        cryptocurrency={updatedCryptocurrency}\r\n        timestampOfLastUpdate={timestampOfLastUpdate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptocurrencyDetailPage;\r\n"],"names":["stringToNumber","number","parseFloat","replace","props","watchlistCtx","useContext","WatchlistContext","imgRef","useRef","supply","maxSupply","cryptocurrency","isOnWatchlist","watchlist","includes","symbol","circulatingSupplyPercentage","isFinite","toFixed","useEffect","async","importedIcon","concat","toLowerCase","current","src","default","error","empty","fetchSvg","changePercent24hButton","isNaN","changePercent24Hr","_jsxs","className","children","_jsx","CaretUp","CaretDown","_Fragment","ref","alt","name","width","height","style","padding","onClick","handleToggleWatchlist","removeFromWatchlist","addToWatchlist","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","rank","Link","to","explorer","target","price","marketCap","volume24Hr","roundToDecimals","decimals","log10","Math","floor","div","pow","round","_ref","timestampOfLastUpdate","currencyCtx","CurrencyContext","fromAmount","setFromAmount","useState","toAmount","setToAmount","priceWithoutSymbol","lastUpdatePriceDate","Date","toLocaleString","year","month","day","hour","minute","timeZone","currentCurrency","onChange","event","value","result","type","placeholder","fillRule","clipRule","require","Highcharts","HighchartsExporting","timestampNow","now","CHART_INTERVALS","title","start","end","historicalData","chartInterval","onChangeChartInterval","darkmodeCtx","DarkmodeContext","chartRef","currentPrice","Number","borderColor","isDarkmode","textColor","options","rangeSelector","selected","enabled","yAxis","opposite","gridZIndex","gridLineColor","text","labels","align","color","showLastLabel","tickPositioner","min","max","ticks","tick","step","push","xAxis","gridLineWidth","tickColor","tickLength","lineColor","tooltip","zIndex","split","shared","followPointer","backgroundColor","borderRadius","useHTML","shadow","formatter","this","y","formattedDate","x","formattedTime","formattedPrice","Intl","NumberFormat","currency","minimumFractionDigits","getNonZeroDecimalPlace","format","plotOptions","series","animation","chart","plotBorderColor","plotBorderWidth","events","render","renderer","path","points","lastPoint","length","labelBg","destroy","labelTxt","attr","add","css","fontSize","translate","plotWidth","plotY","plotTop","toFront","fontFamily","scrollbar","navigator","outlineWidth","maskFill","handles","symbols","fillColor","textOutline","data","threshold","zones","linearGradient","x1","y1","x2","y2","stops","Infinity","lastVisiblePrice","label","lastPrice","dashStyle","lineWidth","enableMouseTracking","credits","exporting","listChartIntervals","map","interval","index","onChangeInterval","toggleFullScreen","_chartRef$current","fullscreen","toggle","handleDownloadCSV","_chartRef$current2","exportChart","version","HighchartsReact","highcharts","constructorType","Converter","sortField","setSortField","sortOrder","setSortOrder","marketsData","setMarketsData","handleSort","field","updatedSortOrder","sortedCurrencies","sortData","getSortIcon","marketsList","market","i","formatPrice","priceUsd","currentCurrencyRate","volume24h","volumeUsd24Hr","marketId","exchangeId","baseSymbol","quoteSymbol","volumePercent","handleLoadMore","onHandleLoadMore","activeTab","setActiveTab","setChartInterval","offset","setOffset","useGetMarketsQuery","id","chartData","useGetChartDataQuery","handleChangeTab","tab","activeTabClasses","tabClasses","PageContent","classes","Chart","Markets","handleLoadMoreMarketsData","prevOffset","CryptocurrencyDetailPage","navigate","useNavigate","currencyId","useParams","cryptocurrencyData","useGetCryptocurrencyQuery","updatedCryptocurrency","formatCryptocurrency","timestamp","href","CryptocurrencyItem","Tabs"],"sourceRoot":""}