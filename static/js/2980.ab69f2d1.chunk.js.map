{"version":3,"file":"static/js/2980.ab69f2d1.chunk.js","mappings":"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","sources":["features/CryptocurrencyDetail/Converter.js","features/CryptocurrencyDetail/Chart.js","features/CryptocurrencyDetail/Markets.js","features/CryptocurrencyDetail/Tabs.js"],"sourcesContent":["import { useContext, useState } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nfunction roundToDecimals(number, decimals) {\r\n  const log10 = number ? Math.floor(Math.log10(number)) : 0,\r\n    div =\r\n      log10 < 0 ? Math.pow(10, decimals - log10 - 1) : Math.pow(10, decimals);\r\n\r\n  return Math.round(number * div) / div;\r\n}\r\n\r\nconst Converter = ({ cryptocurrency, timestampOfLastUpdate }) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const [fromAmount, setFromAmount] = useState(1);\r\n  const [toAmount, setToAmount] = useState(\r\n    roundToDecimals(cryptocurrency.priceWithoutSymbol, 2)\r\n  );\r\n  const lastUpdatePriceDate = new Date(timestampOfLastUpdate).toLocaleString(\r\n    \"en-US\",\r\n    {\r\n      year: \"numeric\",\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n      timeZone: \"UTC\",\r\n    }\r\n  );\r\n\r\n  const handleChangeFromAmount = (event) => {\r\n    setFromAmount(event.target.value);\r\n\r\n    const result =\r\n      event.target.value.replace(\",\", \".\") * cryptocurrency.priceWithoutSymbol;\r\n\r\n    setToAmount(roundToDecimals(result, 2));\r\n  };\r\n\r\n  const handleChangeToAmount = (event) => {\r\n    setToAmount(event.target.value);\r\n\r\n    const result =\r\n      event.target.value.replace(\",\", \".\") / cryptocurrency.priceWithoutSymbol;\r\n\r\n    setFromAmount(roundToDecimals(result, 2));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-slate-400/10 text-slate-700 dark:text-white w-full max-w-md flex flex-col rounded-xl px-4 py-5 space-y-5\">\r\n      <div className=\"flex items-center space-x-3\">\r\n        <div className=\"rounded-full w-4 h-4 border border-amber-500\"></div>\r\n        <div className=\"text-md font-bold\">\r\n          {cryptocurrency.symbol} to {currencyCtx.currentCurrency} converter\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <input\r\n          onChange={handleChangeFromAmount}\r\n          type=\"number\"\r\n          value={fromAmount}\r\n          placeholder=\"0\"\r\n          className=\"w-full pl-3 py-2 pe-14 rounded-md border border-slate-200 shadow-sm focus:outline-none focus:border-sky-500 dark:border-slate-200/10 dark:bg-slate-400/10 dark:text-white sm:text-sm\"\r\n        />\r\n\r\n        <span className=\"absolute inset-y-0 end-3 grid w-10 place-content-center text-slate-500 dark:text-slate-400 select-none\">\r\n          {cryptocurrency.symbol}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"w-full\">\r\n        <svg\r\n          className=\"mx-auto\"\r\n          width=\"24px\"\r\n          height=\"24px\"\r\n          fill=\"none\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M7 23.75a.75.75 0 0 1-.75-.75V1a.75.75 0 0 1 1.5 0v22a.75.75 0 0 1-.75.75Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M2.47 5.53a.75.75 0 0 1 0-1.06l4-4a.75.75 0 0 1 1.06 0l4 4a.75.75 0 0 1-1.06 1.06L7 2.06 3.53 5.53a.75.75 0 0 1-1.06 0ZM17 23.75a.75.75 0 0 1-.75-.75V1a.75.75 0 0 1 1.5 0v22a.75.75 0 0 1-.75.75Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            clipRule=\"evenodd\"\r\n            d=\"M12.47 18.47a.75.75 0 0 1 1.06 0L17 21.94l3.47-3.47a.75.75 0 1 1 1.06 1.06l-4 4a.75.75 0 0 1-1.06 0l-4-4a.75.75 0 0 1 0-1.06Z\"\r\n            fill=\"#1199FA\"\r\n          ></path>\r\n        </svg>\r\n      </div>\r\n\r\n      <div className=\"relative\">\r\n        <input\r\n          onChange={handleChangeToAmount}\r\n          type=\"number\"\r\n          value={toAmount}\r\n          placeholder=\"0\"\r\n          className=\"w-full pl-3 py-2 pe-14 rounded-md border border-slate-200 shadow-sm focus:outline-none focus:border-sky-500 dark:border-slate-200/10 dark:bg-slate-400/10 dark:text-white sm:text-sm\"\r\n        />\r\n\r\n        <span className=\"absolute inset-y-0 end-3 grid w-10 place-content-center text-slate-500 dark:text-slate-400 select-none\">\r\n          {currencyCtx.currentCurrency}\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end mt-4 text-slate-500 text-xs space-x-2\">\r\n        <span>Last update: </span>\r\n        <span className=\"font-semibold\">{lastUpdatePriceDate}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Converter;\r\n","import { useContext, useRef } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport Highcharts from \"highcharts/highstock\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport HighchartsExporting from \"highcharts/modules/exporting\";\r\n\r\nimport Converter from \"./Converter\";\r\nimport DarkmodeContext from \"../../context/darkmode-context\";\r\nimport { getNonZeroDecimalPlace } from \"../../utils/cryptoUtils\";\r\nimport \"./Chart.css\";\r\n\r\nrequire(\"highcharts/modules/accessibility\")(Highcharts);\r\n\r\nif (typeof Highcharts === \"object\") {\r\n  HighchartsExporting(Highcharts);\r\n}\r\n\r\nconst timestampNow = Math.floor(Date.now());\r\n\r\nexport const CHART_INTERVALS = [\r\n  {\r\n    title: \"1D\",\r\n    value: \"m5\",\r\n    start: timestampNow - 5 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"7D\",\r\n    value: \"m15\",\r\n    start: timestampNow - 7 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"1M\",\r\n    value: \"h6\",\r\n    start: timestampNow - 182 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"1Y\",\r\n    value: \"h12\",\r\n    start: timestampNow - 364 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n  {\r\n    title: \"ALL\",\r\n    value: \"d1\",\r\n    start: timestampNow - 3000 * 24 * 60 * 60 * 1000,\r\n    end: timestampNow,\r\n  },\r\n];\r\n\r\nconst Chart = ({\r\n  cryptocurrency,\r\n  historicalData,\r\n  chartInterval,\r\n  onChangeChartInterval,\r\n  timestampOfLastUpdate,\r\n}) => {\r\n  const darkmodeCtx = useContext(DarkmodeContext);\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const chartRef = useRef(null);\r\n  const currentPrice = Number(cryptocurrency.priceWithoutSymbol);\r\n\r\n  const borderColor = darkmodeCtx.isDarkmode\r\n    ? \"rgb(51, 65, 85)\"\r\n    : \"rgb(226, 232, 240)\";\r\n\r\n  const textColor = darkmodeCtx.isDarkmode\r\n    ? \"rgb(148 163 184)\"\r\n    : \"rgb(100 116 139)\";\r\n\r\n  const options = {\r\n    rangeSelector: {\r\n      selected: 1,\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      opposite: true,\r\n      gridZIndex: -1,\r\n      gridLineColor: darkmodeCtx.isDarkmode\r\n        ? \"rgb(30 41 59 / 0.5)\"\r\n        : \"rgb(241 245 249)\",\r\n      title: {\r\n        text: false,\r\n      },\r\n      labels: {\r\n        align: \"left\",\r\n        style: {\r\n          color: textColor,\r\n        },\r\n      },\r\n      showLastLabel: false,\r\n      tickPositioner: function (min, max) {\r\n        if (max < 1) {\r\n          return null;\r\n        } else {\r\n          let ticks = [];\r\n          let tick = min;\r\n          let step = Math.round((max - min) / 7);\r\n\r\n          if (step === 0) {\r\n            return null;\r\n          }\r\n\r\n          while (tick < max - step / 2) {\r\n            ticks.push(Math.round(tick));\r\n            tick += step;\r\n          }\r\n\r\n          ticks.push(Math.round(max));\r\n          ticks.push(Math.round(max + step));\r\n\r\n          return ticks;\r\n        }\r\n      },\r\n    },\r\n    xAxis: {\r\n      type: \"datetime\",\r\n      gridLineWidth: 0,\r\n      tickColor: borderColor,\r\n      tickLength: 5,\r\n      lineColor: borderColor,\r\n      labels: {\r\n        style: {\r\n          color: textColor,\r\n        },\r\n      },\r\n    },\r\n    tooltip: {\r\n      zIndex: 2,\r\n      split: false,\r\n      shared: true,\r\n      followPointer: true,\r\n      backgroundColor: darkmodeCtx.isDarkmode ? \"rgb(30 41 59)\" : \"#FFF\",\r\n      borderColor: \"#AAAAAA\",\r\n      borderRadius: 5,\r\n      useHTML: true,\r\n      shadow: false,\r\n      padding: 0,\r\n      formatter: function () {\r\n        const price = this.y;\r\n\r\n        const formattedDate = Highcharts.dateFormat(\"%d/%m/%Y\", this.x);\r\n        const formattedTime = Highcharts.dateFormat(\"%H:%M:%S\", this.x);\r\n        const formattedPrice = new Intl.NumberFormat(\"en-EN\", {\r\n          style: \"currency\",\r\n          currency: currencyCtx.currentCurrency,\r\n          minimumFractionDigits: getNonZeroDecimalPlace(price) + 1,\r\n        }).format(price);\r\n\r\n        return `\r\n          <div class=\"w-48 flex flex-col px-3 py-2 space-y-2 text-xs rounded-md p-3 leading-4 shadow-[rgba(88,102,126,0.08)_0px_1px_1px,rgba(88,102,126,0.1)_0px_8px_16px]\">\r\n            <div class=\"flex justify-between items-center text-slate-500\">\r\n              <span class=\"text-slate-700 dark:text-white font-medium\">${formattedDate}</span>\r\n              <span class=\"text-slate-500 dark:text-slate-400\">${formattedTime}</span>\r\n            </div>\r\n            <div>\r\n              <span style=\"${\r\n                this.y < currentPrice\r\n                  ? \"background-color: rgb(239 68 68)\"\r\n                  : \"background-color: rgb(34 197 94)\"\r\n              }\" class=\"inline-block w-3.5 h-3.5 content-[''] shadow-[rgba(88,102,126,0.08)_0px_1px_1px,rgba(88,102,126,0.1)_0px_8px_16px] translate-y-0.5 mr-2 rounded-full border-2 border-solid border-white\"></span>\r\n              <span class=\"text-slate-500 dark:text-slate-400\">Price: </span>\r\n              <span class=\"text-slate-700 dark:text-white font-medium\">${formattedPrice}</span>\r\n            </div>\r\n          </div>\r\n            `;\r\n      },\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        animation: false,\r\n      },\r\n    },\r\n    chart: {\r\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n      plotBorderColor: borderColor,\r\n      plotBorderWidth: 1,\r\n      events: {\r\n        render() {\r\n          const chart = this,\r\n            renderer = this.renderer,\r\n            pathStr = \"M 0 12 L 0 0 L 64 0 L 64 24 L 0 24 Z\",\r\n            path = pathStr.split(\" \"),\r\n            points = this.series[0].points,\r\n            lastPoint = points[points.length - 1];\r\n\r\n          if (chart.labelBg) {\r\n            chart.labelBg.destroy();\r\n          }\r\n          if (chart.labelTxt) {\r\n            chart.labelTxt.destroy();\r\n          }\r\n\r\n          chart.labelBg = renderer\r\n            .path(path)\r\n            .attr({\r\n              fill:\r\n                lastPoint.y > currentPrice\r\n                  ? \"rgb(34 197 94)\"\r\n                  : \"rgb(239 68 68)\",\r\n            })\r\n            .add();\r\n\r\n          chart.labelTxt = renderer\r\n            .text(Highcharts.numberFormat(lastPoint.y, 0))\r\n            .css({\r\n              fontSize: \"0.75rem\",\r\n              color: \"#fff\",\r\n            })\r\n            .add();\r\n\r\n          chart.labelBg\r\n            .translate(\r\n              chart.plotWidth + 10,\r\n              lastPoint.plotY + chart.plotTop - 12\r\n            )\r\n            .toFront();\r\n\r\n          chart.labelTxt\r\n            .attr({\r\n              x: chart.plotWidth + 25,\r\n              y: lastPoint.plotY + chart.plotTop + 5,\r\n            })\r\n            .toFront();\r\n        },\r\n      },\r\n      style: {\r\n        fontFamily: `\"Inter\", sans-serif`,\r\n      },\r\n    },\r\n    scrollbar: {\r\n      enabled: true,\r\n      height: 0,\r\n    },\r\n    navigator: {\r\n      outlineWidth: 0,\r\n      maskFill: \"rgba(56, 98, 251, 0.08)\",\r\n      handles: {\r\n        backgroundColor: \"#eee\",\r\n        borderColor: \"#777\",\r\n        symbols: [\"circle\", \"circle\"],\r\n      },\r\n      series: {\r\n        type: \"areaspline\",\r\n        color: \"#555\",\r\n        fillColor: \"#ddd\",\r\n      },\r\n      xAxis: {\r\n        gridLineColor: \"rgb(148 163 184 / 0.2)\",\r\n        gridLineWidth: 1,\r\n        labels: {\r\n          y: 12,\r\n          style: {\r\n            color: textColor,\r\n            textOutline: \"none\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        type: \"area\",\r\n        name: currencyCtx.currentCurrency,\r\n        data: historicalData?.length ? historicalData : [],\r\n        color: \"#000\",\r\n        threshold: currentPrice,\r\n        zones: [\r\n          {\r\n            value: currentPrice,\r\n            color: \"#ff6968\",\r\n            fillColor: {\r\n              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\r\n              stops: [\r\n                [0, \"rgba(255, 105, 104, 0)\"],\r\n                [1, \"rgba(255, 105, 104, 0.2)\"],\r\n              ],\r\n            },\r\n            threshold: Infinity,\r\n          },\r\n          {\r\n            color: \"#94caae\",\r\n            fillColor: {\r\n              linearGradient: { x1: 0, y1: 0, x2: 0, y2: 0.5 },\r\n              stops: [\r\n                [0, \"rgba(34, 197, 94, 0.2)\"],\r\n                [1, \"rgba(34, 197, 94, 0)\"],\r\n              ],\r\n            },\r\n          },\r\n        ],\r\n        lastVisiblePrice: {\r\n          enabled: true,\r\n          color: \"red\",\r\n          label: {\r\n            enabled: true,\r\n            backgroundColor: \"red\",\r\n          },\r\n        },\r\n        lastPrice: {\r\n          enabled: true,\r\n          label: {\r\n            enabled: true,\r\n            format: \"{value:.1f}\",\r\n            padding: 5,\r\n            backgroundColor: \"grey\",\r\n            style: {\r\n              color: \"#ffff00\",\r\n            },\r\n          },\r\n        },\r\n      },\r\n      {\r\n        type: \"line\",\r\n        data: historicalData?.length\r\n          ? [\r\n              [historicalData[0][0], currentPrice],\r\n              [historicalData[historicalData.length - 1][0], currentPrice],\r\n            ]\r\n          : [],\r\n        color: borderColor,\r\n        dashStyle: \"dash\",\r\n        lineWidth: 1,\r\n        enableMouseTracking: false,\r\n      },\r\n    ],\r\n\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    exporting: {\r\n      enabled: false,\r\n    },\r\n  };\r\n\r\n  const toggleFullScreen = () => {\r\n    const chart = chartRef.current?.chart;\r\n    if (chart) {\r\n      chart.fullscreen.toggle();\r\n    }\r\n  };\r\n\r\n  const handleDownloadCSV = () => {\r\n    const chart = chartRef.current?.chart;\r\n    if (chart) {\r\n      chart.exportChart();\r\n    }\r\n  };\r\n\r\n  const onChangeInterval = (interval) => {\r\n    onChangeChartInterval(interval);\r\n  };\r\n\r\n  const listChartIntervals = CHART_INTERVALS.map((interval, index) => (\r\n    <li key={index}>\r\n      <button\r\n        onClick={() => onChangeInterval(interval)}\r\n        className={`flex justify-center hover:bg-white hover:dark:bg-slate-900 rounded-lg px-3 py-1 ${\r\n          chartInterval.title === interval.title\r\n            ? \"bg-white dark:bg-slate-900 text-sky-500\"\r\n            : \"hover:bg-white hover:dark:bg-slate-900\"\r\n        }`}\r\n      >\r\n        {interval.title}\r\n      </button>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"mt-5 grid grid-cols-1 gap-y-6 lg:gap-x-6 lg:w-full lg:grid-cols-4\">\r\n      <div className=\"col-span-3\">\r\n        <div className=\"flex justify-between\">\r\n          <div>\r\n            <ul className=\"grid grid-flow-col text-center text-neutral-800 dark:text-neutral-300 bg-slate-400/10 rounded-lg p-1 space-x-1 text-xs font-medium\">\r\n              {listChartIntervals}\r\n            </ul>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={toggleFullScreen}\r\n              className=\"flex items-center px-3 py-2 space-x-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n            >\r\n              <svg\r\n                viewBox=\"0 0 14 14\"\r\n                className=\"w-3 h-3 text-neutral-500 dark:text-neutral-300\"\r\n                fill=\"none\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  d=\"M1 4.62V1.666h2.917m6.166 0H13v2.952m0 4.762v2.952h-2.917m-6.166 0H1V9.381\"\r\n                  stroke=\"currentColor\"\r\n                  strokeWidth=\"2\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </svg>\r\n              <span className=\"text-xs font-medium\">Fullscreen</span>\r\n            </button>\r\n            <button\r\n              onClick={handleDownloadCSV}\r\n              className=\"flex items-center px-3 py-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md\"\r\n            >\r\n              <svg\r\n                viewBox=\"0 0 24 24\"\r\n                version=\"1.1\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"w-5 h-4 text-neutral-500 dark:text-neutral-300\"\r\n                fill=\"none\"\r\n              >\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M20 15C19.45 15 19 15.45 19 16V19H5V16C5 15.45 4.55 15 4 15C3.45 15 3 15.45 3 16V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V16C21 15.45 20.55 15 20 15Z\"\r\n                ></path>\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M10.5499 15.44C10.9499 15.84 11.47 16.04 12 16.04C12.53 16.04 13.05 15.84 13.45 15.44L17.7099 11.18C18.0999 10.79 18.0999 10.16 17.7099 9.77C17.3199 9.38 16.6899 9.38 16.2999 9.77L13.01 13.01V4C13.01 3.45 12.56 3 12.01 3C11.46 3 11.01 3.45 11.01 4V13.06L7.71996 9.77C7.32996 9.38 6.69996 9.38 6.30996 9.77C5.91996 10.16 5.91996 10.79 6.30996 11.18L10.57 15.44H10.5499Z\"\r\n                ></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        {historicalData?.length !== 0 && (\r\n          <HighchartsReact\r\n            highcharts={Highcharts}\r\n            constructorType={\"stockChart\"}\r\n            options={options}\r\n            ref={chartRef}\r\n          />\r\n        )}\r\n      </div>\r\n      <div>\r\n        <Converter\r\n          cryptocurrency={cryptocurrency}\r\n          timestampOfLastUpdate={timestampOfLastUpdate}\r\n          key={cryptocurrency.priceWithoutSymbol}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import { useState, useContext } from \"react\";\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport { formatPrice } from \"../../utils/cryptoUtils\";\r\nimport { sortData } from \"../../utils/sort\";\r\n\r\nimport { ReactComponent as CaretDown } from \"../../assets/svg/caret-down.svg\";\r\nimport { ReactComponent as CaretUp } from \"../../assets/svg/caret-up.svg\";\r\n\r\nconst Markets = (props) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n\r\n  const [sortField, setSortField] = useState(\"\");\r\n  const [sortOrder, setSortOrder] = useState(\"asc\");\r\n\r\n  const [marketsData, setMarketsData] = useState(props.marketsData);\r\n\r\n  const handleLoadMore = () => {\r\n    props.onHandleLoadMore();\r\n  };\r\n\r\n  const handleSort = (field) => {\r\n    let updatedSortOrder;\r\n    if (field === sortField) {\r\n      updatedSortOrder = sortOrder === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      updatedSortOrder = \"desc\";\r\n    }\r\n\r\n    const sortedCurrencies = sortData(\r\n      [...marketsData],\r\n      field,\r\n      updatedSortOrder\r\n    );\r\n\r\n    setSortField(field);\r\n    setSortOrder(updatedSortOrder);\r\n    setMarketsData(sortedCurrencies);\r\n  };\r\n\r\n  const getSortIcon = (field) => {\r\n    if (sortField === field) {\r\n      return sortOrder === \"asc\" ? (\r\n        <CaretUp className=\"w-3 h-3 mr-1 1 fill-black dark:fill-slate-200\" />\r\n      ) : (\r\n        <CaretDown className=\"w-3 h-3 mr-1 1 fill-black dark:fill-slate-200\" />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const marketsList = marketsData.map((market, i) => {\r\n    const price = formatPrice(\r\n      market.priceUsd,\r\n      currencyCtx.currentCurrency,\r\n      currencyCtx.currentCurrencyRate\r\n    );\r\n\r\n    const volume24h = formatPrice(\r\n      market.volumeUsd24Hr,\r\n      currencyCtx.currentCurrency,\r\n      currencyCtx.currentCurrencyRate\r\n    );\r\n\r\n    return (\r\n      <tr key={market.marketId}>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 text-slate-600 dark:text-slate-300\">\r\n          {market.marketId}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {market.exchangeId}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {market.baseSymbol}/{market.quoteSymbol}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {price}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {volume24h}\r\n        </td>\r\n        <td className=\"border-b border-slate-200 dark:border-slate-800 p-4 pr-8 text-slate-600 dark:text-slate-300\">\r\n          {parseFloat(market.volumePercent).toFixed(2)}%\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"border-t border-slate-200 dark:border-slate-700 table-auto w-full text-sm\">\r\n          <thead>\r\n            <tr>\r\n              <th\r\n                onClick={() => handleSort(\"marketId\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {\" \"}\r\n                  {getSortIcon(\"marketId\")} #\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"exchangeId\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"exchangeId\")}Exchange\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"baseSymbol\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"baseSymbol\")}Pair\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"priceUsd\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"priceUsd\")}Price\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"volumeUsd24Hr\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"volumeUsd24Hr\")}Volume 24h\r\n                </span>\r\n              </th>\r\n              <th\r\n                onClick={() => handleSort(\"volumePercent\")}\r\n                className=\"border-b border-slate-200 dark:border-slate-700 font-medium p-4 text-slate-600 dark:text-slate-300 text-left\"\r\n              >\r\n                <span className=\"flex items-center cursor-pointer hover:underline\">\r\n                  {getSortIcon(\"volumePercent\")}Volume %\r\n                </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{marketsList}</tbody>\r\n        </table>\r\n      </div>\r\n\r\n      {props.marketsData.length !== 0 && (\r\n        <div className=\"mt-5 flex justify-center\">\r\n          <button\r\n            onClick={handleLoadMore}\r\n            className=\"flex text-neutral-800 dark:text-neutral-300 font-medium bg-slate-400/20 hover:bg-slate-400/30 rounded-md py-2 px-16 cursor-pointer transition-colors duration-300\"\r\n          >\r\n            Load More\r\n          </button>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default Markets;\r\n","import { useContext, useState } from \"react\";\r\n\r\nimport CurrencyContext from \"../../context/currecy-context\";\r\n\r\nimport Chart from \"./Chart\";\r\nimport PageContent from \"../../components/Layout/PageContent\";\r\nimport Markets from \"./Markets\";\r\nimport { CHART_INTERVALS } from \"./Chart\";\r\nimport {\r\n  useGetChartDataQuery,\r\n  useGetMarketsQuery,\r\n} from \"../../store/services/cryptoApi\";\r\n\r\nconst Tabs = (props) => {\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  const [activeTab, setActiveTab] = useState(\"Overview\");\r\n  const [chartInterval, setChartInterval] = useState(CHART_INTERVALS[4]);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  const { data: marketsData = [] } = useGetMarketsQuery({\r\n    id: props.cryptocurrency.id,\r\n    offset,\r\n  });\r\n\r\n  const { data: chartData = [] } = useGetChartDataQuery({\r\n    id: props.cryptocurrency.id,\r\n    chartInterval: chartInterval.value,\r\n    start: chartInterval.start,\r\n    end: chartInterval.end,\r\n    currentCurrencyRate: currencyCtx.currentCurrencyRate,\r\n  });\r\n\r\n  const handleChangeTab = (tab) => () => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  const handleLoadMoreMarketsData = () => {\r\n    setOffset((prevOffset) => prevOffset + 100);\r\n  };\r\n\r\n  const handleChangeChartInterval = (interval) => {\r\n    setChartInterval(interval);\r\n  };\r\n\r\n  const activeTabClasses =\r\n    \"inline-block px-4 py-3 rounded-lg text-white dark:text-slate-900 bg-sky-500 cursor-pointer\";\r\n  const tabClasses =\r\n    \"inline-block px-4 py-3 rounded-lg hover:text-slate-900 hover:bg-slate-400/20 dark:hover:text-white cursor-pointer\";\r\n\r\n  return (\r\n    <>\r\n      <div className=\"border-y border-slate-200 dark:border-slate-700\">\r\n        <PageContent classes=\"my-3\">\r\n          <ul className=\"flex flex-wrap text-sm font-medium text-center text-slate-500 dark:text-slate-400\">\r\n            <li className=\"mr-2\">\r\n              <span\r\n                onClick={handleChangeTab(\"Overview\")}\r\n                className={\r\n                  activeTab === \"Overview\" ? activeTabClasses : tabClasses\r\n                }\r\n                aria-current=\"page\"\r\n              >\r\n                Overview\r\n              </span>\r\n            </li>\r\n            <li className=\"mr-2\">\r\n              <span\r\n                onClick={handleChangeTab(\"Markets\")}\r\n                className={\r\n                  activeTab === \"Markets\" ? activeTabClasses : tabClasses\r\n                }\r\n              >\r\n                Markets\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </PageContent>\r\n      </div>\r\n      <PageContent>\r\n        {activeTab === \"Overview\" && (\r\n          <Chart\r\n            cryptocurrency={props.cryptocurrency}\r\n            historicalData={chartData}\r\n            chartInterval={chartInterval}\r\n            onChangeChartInterval={handleChangeChartInterval}\r\n            timestampOfLastUpdate={props.timestampOfLastUpdate}\r\n          />\r\n        )}\r\n        {activeTab === \"Markets\" && (\r\n          <Markets\r\n            key={marketsData.length}\r\n            marketsData={marketsData}\r\n            name={props.cryptocurrency.name}\r\n            onHandleLoadMore={handleLoadMoreMarketsData}\r\n          />\r\n        )}\r\n      </PageContent>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tabs;\r\n"],"names":["roundToDecimals","number","decimals","log10","Math","floor","div","pow","round","_ref","cryptocurrency","timestampOfLastUpdate","currencyCtx","useContext","CurrencyContext","fromAmount","setFromAmount","useState","toAmount","setToAmount","priceWithoutSymbol","lastUpdatePriceDate","Date","toLocaleString","year","month","day","hour","minute","timeZone","_jsxs","className","children","_jsx","symbol","currentCurrency","onChange","event","target","value","result","replace","type","placeholder","width","height","fill","xmlns","fillRule","clipRule","d","require","Highcharts","HighchartsExporting","timestampNow","now","CHART_INTERVALS","title","start","end","historicalData","chartInterval","onChangeChartInterval","darkmodeCtx","DarkmodeContext","chartRef","useRef","currentPrice","Number","borderColor","isDarkmode","textColor","options","rangeSelector","selected","enabled","yAxis","opposite","gridZIndex","gridLineColor","text","labels","align","style","color","showLastLabel","tickPositioner","min","max","ticks","tick","step","push","xAxis","gridLineWidth","tickColor","tickLength","lineColor","tooltip","zIndex","split","shared","followPointer","backgroundColor","borderRadius","useHTML","shadow","padding","formatter","price","this","y","formattedDate","x","formattedTime","formattedPrice","Intl","NumberFormat","currency","minimumFractionDigits","getNonZeroDecimalPlace","format","concat","plotOptions","series","animation","chart","plotBorderColor","plotBorderWidth","events","render","renderer","path","points","lastPoint","length","labelBg","destroy","labelTxt","attr","add","css","fontSize","translate","plotWidth","plotY","plotTop","toFront","fontFamily","scrollbar","navigator","outlineWidth","maskFill","handles","symbols","fillColor","textOutline","name","data","threshold","zones","linearGradient","x1","y1","x2","y2","stops","Infinity","lastVisiblePrice","label","lastPrice","dashStyle","lineWidth","enableMouseTracking","credits","exporting","listChartIntervals","map","interval","index","onClick","onChangeInterval","toggleFullScreen","_chartRef$current","current","fullscreen","toggle","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","handleDownloadCSV","_chartRef$current2","exportChart","version","HighchartsReact","highcharts","constructorType","ref","Converter","props","sortField","setSortField","sortOrder","setSortOrder","marketsData","setMarketsData","handleSort","field","updatedSortOrder","sortedCurrencies","sortData","getSortIcon","CaretUp","CaretDown","marketsList","market","i","formatPrice","priceUsd","currentCurrencyRate","volume24h","volumeUsd24Hr","marketId","exchangeId","baseSymbol","quoteSymbol","parseFloat","volumePercent","toFixed","_Fragment","handleLoadMore","onHandleLoadMore","activeTab","setActiveTab","setChartInterval","offset","setOffset","useGetMarketsQuery","id","chartData","useGetChartDataQuery","handleChangeTab","tab","activeTabClasses","tabClasses","PageContent","classes","Chart","Markets","handleLoadMoreMarketsData","prevOffset"],"sourceRoot":""}