{"version":3,"file":"static/js/2375.530e188f.chunk.js","mappings":"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","sources":["features/CryptocurrencyDetail/CryptocurrencyItem.js","pages/CryptocurrencyDetail.js"],"sourcesContent":["import { useContext, useEffect, useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport empty from \"../../assets/svg/crypto-empty.svg\";\r\nimport { ReactComponent as CaretDown } from \"../../assets/svg/caret-down.svg\";\r\nimport { ReactComponent as CaretUp } from \"../../assets/svg/caret-up.svg\";\r\nimport { WatchlistContext } from \"../../context/watchlist-context\";\r\n\r\nconst stringToNumber = (number) => {\r\n  return parseFloat(number.replace(/,/g, \"\"));\r\n};\r\n\r\nconst CryptocurrencyItem = (props) => {\r\n  const watchlistCtx = useContext(WatchlistContext);\r\n  const imgRef = useRef(null);\r\n  let { supply, maxSupply } = props.cryptocurrency;\r\n\r\n  supply = stringToNumber(supply);\r\n  maxSupply = stringToNumber(maxSupply);\r\n\r\n  const isOnWatchlist = watchlistCtx.watchlist.includes(\r\n    props.cryptocurrency.symbol\r\n  );\r\n\r\n  let circulatingSupplyPercentage;\r\n  if (isFinite(supply / maxSupply)) {\r\n    circulatingSupplyPercentage = ((supply / maxSupply) * 100).toFixed(2) + \"%\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchSvg = async () => {\r\n      try {\r\n        const importedIcon = await import(\r\n          `../../../node_modules/cryptocurrency-icons/svg/color/${props.cryptocurrency.symbol.toLowerCase()}.svg`\r\n        );\r\n        imgRef.current.src = importedIcon.default;\r\n      } catch (error) {\r\n        imgRef.current.src = empty;\r\n      }\r\n    };\r\n    fetchSvg();\r\n  }, [props.cryptocurrency.symbol]);\r\n\r\n  const handleToggleWatchlist = () => {\r\n    if (watchlistCtx.watchlist.includes(props.cryptocurrency.symbol)) {\r\n      watchlistCtx.removeFromWatchlist(props.cryptocurrency.symbol);\r\n    } else {\r\n      watchlistCtx.addToWatchlist(props.cryptocurrency.symbol);\r\n    }\r\n  };\r\n\r\n  const changePercent24hButton = isNaN(\r\n    props.cryptocurrency.changePercent24Hr\r\n  ) ? (\r\n    \"-\"\r\n  ) : props.cryptocurrency.changePercent24Hr > 0 ? (\r\n    <span className=\"text-white bg-green-500 font-medium rounded-md text-xs px-3 py-1.5 text-center inline-flex items-center ml-3\">\r\n      <CaretUp className=\"fill-white w-3 h-3\" />\r\n      {props.cryptocurrency.changePercent24Hr}%\r\n    </span>\r\n  ) : (\r\n    <span className=\"text-white bg-red-500 font-medium rounded-md text-xs px-3 py-1.5 text-center inline-flex items-center ml-3\">\r\n      <CaretDown className=\"fill-white w-3 h-3\" />\r\n      {props.cryptocurrency.changePercent24Hr}%\r\n    </span>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"flex items-center justify-between mt-8\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <img\r\n            ref={imgRef}\r\n            src={empty}\r\n            alt={`Logo ${props.cryptocurrency.name}`}\r\n            width={32}\r\n            height={32}\r\n          />\r\n          <h2 className=\"text-4xl font-semibold leading-none sm:text-4xl xl:max-w-3xl text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.name}\r\n          </h2>\r\n          <span\r\n            className=\"flex items-center text-xs font-medium bg-slate-400/10 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n            style={{ padding: \"5px 8px\" }}\r\n          >\r\n            {props.cryptocurrency.symbol}\r\n          </span>\r\n        </div>\r\n\r\n        <button\r\n          onClick={handleToggleWatchlist}\r\n          className=\"flex items-center px-3 py-2 space-x-2 bg-slate-400/10 hover:bg-slate-400/20 rounded-md text-neutral-800 dark:text-neutral-300\"\r\n        >\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className={`w-4 h-4 outline-0 ${\r\n              isOnWatchlist ? \"text-amber-500\" : \"\"\r\n            }`}\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z\"\r\n            ></path>\r\n          </svg>\r\n          <span className=\"hidden md:block text-xs font-medium\">\r\n            {isOnWatchlist ? \"Remove from Watchlist\" : \"Add to Watchlist\"}\r\n          </span>\r\n        </button>\r\n      </div>\r\n      <div className=\"flex items-center mt-3\">\r\n        <span\r\n          className=\"bg-slate-400/30 font-medium rounded-md text-xs dark:text-white\"\r\n          style={{ padding: \"5px 8px\" }}\r\n        >\r\n          Rank #{props.cryptocurrency.rank}\r\n        </span>\r\n        <Link\r\n          to={props.cryptocurrency.explorer}\r\n          target=\"_blank\"\r\n          className=\"bg-slate-400/10 hover:bg-slate-400/20 font-medium rounded-md text-xs text-center inline-flex items-center ml-3 dark:text-white\"\r\n          style={{ padding: \"5px 8px\" }}\r\n        >\r\n          Explorer\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            strokeWidth=\"1.5\"\r\n            stroke=\"currentColor\"\r\n            className=\"w-4 h-4 ml-1\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              d=\"M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25\"\r\n            />\r\n          </svg>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"mt-5 grid gap-6 lg:w-full lg:grid-cols-4 lg:border-t border-slate-100 dark:border-slate-800 py-5\">\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            {props.cryptocurrency.name} Price ({props.cryptocurrency.symbol})\r\n          </h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.price}\r\n            {changePercent24hButton}\r\n          </span>\r\n        </div>\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            Market Cap\r\n          </h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.marketCap}\r\n          </span>\r\n        </div>\r\n        <div className=\"lg:border-r border-slate-100 dark:border-slate-800\">\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">Volume</h3>\r\n          <span className=\"text-sm font-semibold text-slate-700 dark:text-white\">\r\n            {props.cryptocurrency.volume24Hr}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <h3 className=\"text-sm text-slate-500 dark:text-slate-400\">\r\n            Circulating Supply\r\n          </h3>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"font-semibold text-slate-700 dark:text-white\">\r\n              {props.cryptocurrency.supply}\r\n            </span>\r\n            <span className=\"text-slate-500 dark:text-slate-400\">\r\n              {circulatingSupplyPercentage}\r\n            </span>\r\n          </div>\r\n          {circulatingSupplyPercentage && (\r\n            <>\r\n              <div className=\"w-full h-2 bg-slate-400/10 rounded-full mt-3\">\r\n                <div\r\n                  className=\"h-full text-center text-xs text-white bg-slate-400/30 rounded-full\"\r\n                  style={{ width: circulatingSupplyPercentage }}\r\n                ></div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-between text-sm mt-3\">\r\n                <span className=\"text-slate-500 dark:text-slate-400\">\r\n                  Max supply:\r\n                </span>\r\n                <span className=\"font-semibold text-slate-700 dark:text-white\">\r\n                  {!isNaN(parseFloat(props.cryptocurrency.maxSupply))\r\n                    ? props.cryptocurrency.maxSupply\r\n                    : \"-\"}\r\n                </span>\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptocurrencyItem;\r\n","import { Link, useNavigate, useParams } from \"react-router-dom\";\r\n\r\nimport PageContent from \"../components/Layout/PageContent\";\r\nimport CryptocurrencyItem from \"../features/CryptocurrencyDetail/CryptocurrencyItem\";\r\n\r\n//import Tabs from \"../features/CryptocurrencyDetail/Tabs\";\r\n\r\nimport { Suspense, lazy, useContext } from \"react\";\r\nimport CurrencyContext from \"../context/currecy-context\";\r\nimport { formatCryptocurrency } from \"../utils/cryptoUtils\";\r\nimport { useGetCryptocurrencyQuery } from \"../store/services/cryptoApi\";\r\n\r\nconst Tabs = lazy(() => import(\"../features/CryptocurrencyDetail/Tabs\"));\r\n\r\nconst CryptocurrencyDetailPage = () => {\r\n  const navigate = useNavigate();\r\n  const currencyCtx = useContext(CurrencyContext);\r\n  let { currencyId } = useParams();\r\n  const { data: cryptocurrencyData, error } =\r\n    useGetCryptocurrencyQuery(currencyId);\r\n\r\n  if (error) navigate(\"/404\");\r\n  if (!cryptocurrencyData) return;\r\n\r\n  const updatedCryptocurrency = formatCryptocurrency(\r\n    cryptocurrencyData.data,\r\n    currencyCtx.currentCurrency,\r\n    currencyCtx.currentCurrencyRate\r\n  );\r\n\r\n  const timestampOfLastUpdate = cryptocurrencyData.timestamp;\r\n\r\n  return (\r\n    <>\r\n      <PageContent classes=\"mt-8\">\r\n        <nav to={\"/\"} className=\"flex\" aria-label=\"Breadcrumb\">\r\n          <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\r\n            <li className=\"inline-flex items-center\">\r\n              <Link\r\n                to={\"/\"}\r\n                href=\"#\"\r\n                className=\"inline-flex items-center text-sm font-medium text-slate-700 hover:text-sky-600 dark:text-slate-400 dark:hover:text-white\"\r\n              >\r\n                Cryptocurrencies\r\n              </Link>\r\n            </li>\r\n            <li aria-current=\"page\">\r\n              <div className=\"flex items-center\">\r\n                <svg\r\n                  aria-hidden=\"true\"\r\n                  className=\"w-5 h-5 text-slate-400\"\r\n                  fill=\"currentColor\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\r\n                    clipRule=\"evenodd\"\r\n                  ></path>\r\n                </svg>\r\n                <span className=\"ml-1 text-sm font-medium text-slate-500 md:ml-2 dark:text-slate-400\">\r\n                  {cryptocurrencyData.data.name}\r\n                </span>\r\n              </div>\r\n            </li>\r\n          </ol>\r\n        </nav>\r\n        <CryptocurrencyItem cryptocurrency={updatedCryptocurrency} />\r\n      </PageContent>\r\n      <Suspense>\r\n        <Tabs\r\n          cryptocurrency={updatedCryptocurrency}\r\n          timestampOfLastUpdate={timestampOfLastUpdate}\r\n        />\r\n      </Suspense>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CryptocurrencyDetailPage;\r\n"],"names":["stringToNumber","number","parseFloat","replace","props","watchlistCtx","useContext","WatchlistContext","imgRef","useRef","supply","maxSupply","cryptocurrency","isOnWatchlist","watchlist","includes","symbol","circulatingSupplyPercentage","isFinite","toFixed","useEffect","async","importedIcon","concat","toLowerCase","current","src","default","error","empty","fetchSvg","changePercent24hButton","isNaN","changePercent24Hr","_jsxs","className","children","_jsx","CaretUp","CaretDown","_Fragment","ref","alt","name","width","height","style","padding","onClick","handleToggleWatchlist","removeFromWatchlist","addToWatchlist","xmlns","fill","viewBox","strokeWidth","stroke","strokeLinecap","strokeLinejoin","d","rank","Link","to","explorer","target","price","marketCap","volume24Hr","Tabs","lazy","CryptocurrencyDetailPage","navigate","useNavigate","currencyCtx","CurrencyContext","currencyId","useParams","data","cryptocurrencyData","useGetCryptocurrencyQuery","updatedCryptocurrency","formatCryptocurrency","currentCurrency","currentCurrencyRate","timestampOfLastUpdate","timestamp","PageContent","classes","href","fillRule","clipRule","CryptocurrencyItem","Suspense"],"sourceRoot":""}